#include "UseCudaLibdevice.hpp"

#include "Utility.hpp"

#include <mlir/Dialect/Func/IR/FuncOps.h>
#include <mlir/Dialect/GPU/IR/GPUDialect.h>
#include <mlir/Dialect/LLVMIR/LLVMDialect.h>
#include <mlir/IR/PatternMatch.h>
#include <mlir/Pass/PassManager.h>
#include <mlir/Transforms/GreedyPatternRewriteDriver.h>

#include <unordered_set>


namespace sir {

using mlir::MLIRContext;


static const std::unordered_set<std::string_view>& GetLibdeviceFunctions();


template <class FuncOpT>
class FuncPattern : public mlir::OpRewritePattern<FuncOpT> {
public:
    using mlir::OpRewritePattern<FuncOpT>::OpRewritePattern;

    mlir::LogicalResult matchAndRewrite(FuncOpT op,
                                        mlir::PatternRewriter& rewriter) const override {
        if (op.isExternal()) {
            const auto libdeviceName = "__nv_" + op.getSymName().str();
            if (GetLibdeviceFunctions().contains(libdeviceName)) {
                auto newNameAttr = rewriter.getStringAttr(libdeviceName);
                if (succeeded(op.replaceAllSymbolUses(newNameAttr, op->getParentOp()))) {
                    op.setSymName(newNameAttr);
                    return mlir::success();
                }
            }
        }
        return mlir::failure();
    }
};


void UseCudaLibdevicePass::runOnOperation() {
    mlir::Operation* op = getOperation();
    MLIRContext* context = op->getContext();

    mlir::RewritePatternSet patterns(context);
    patterns.add<FuncPattern<mlir::func::FuncOp>>(context);
    patterns.add<FuncPattern<mlir::LLVM::LLVMFuncOp>>(context);

    // Use TopDownTraversal for compile time reasons
    mlir::GreedyRewriteConfig grc;
    grc.useTopDownTraversal = true;
    (void)mlir::applyPatternsAndFoldGreedily(op->getRegions(), std::move(patterns), grc);
}


static const std::unordered_set<std::string_view>& GetLibdeviceFunctions() {
    // Get list from here:
    // https://docs.nvidia.com/cuda/libdevice-users-guide/index.html
    static const std::unordered_set<std::string_view> libdeviceFunctions = {
        "__nv_abs",
        "__nv_acos",
        "__nv_acosf",
        "__nv_acosh",
        "__nv_acoshf",
        "__nv_asin",
        "__nv_asinf",
        "__nv_asinh",
        "__nv_asinhf",
        "__nv_atan",
        "__nv_atan2",
        "__nv_atan2f",
        "__nv_atanf",
        "__nv_atanh",
        "__nv_atanhf",
        "__nv_brev",
        "__nv_brevll",
        "__nv_byte_perm",
        "__nv_cbrt",
        "__nv_cbrtf",
        "__nv_ceil",
        "__nv_ceilf",
        "__nv_clz",
        "__nv_clzll",
        "__nv_copysign",
        "__nv_copysignf",
        "__nv_cos",
        "__nv_cosf",
        "__nv_cosh",
        "__nv_coshf",
        "__nv_cospi",
        "__nv_cospif",
        "__nv_dadd_rd",
        "__nv_dadd_rn",
        "__nv_dadd_ru",
        "__nv_dadd_rz",
        "__nv_ddiv_rd",
        "__nv_ddiv_rn",
        "__nv_ddiv_ru",
        "__nv_ddiv_rz",
        "__nv_dmul_rd",
        "__nv_dmul_rn",
        "__nv_dmul_ru",
        "__nv_dmul_rz",
        "__nv_double2float_rd",
        "__nv_double2float_rn",
        "__nv_double2float_ru",
        "__nv_double2float_rz",
        "__nv_double2hiint",
        "__nv_double2int_rd",
        "__nv_double2int_rn",
        "__nv_double2int_ru",
        "__nv_double2int_rz",
        "__nv_double2ll_rd",
        "__nv_double2ll_rn",
        "__nv_double2ll_ru",
        "__nv_double2ll_rz",
        "__nv_double2loint",
        "__nv_double2uint_rd",
        "__nv_double2uint_rn",
        "__nv_double2uint_ru",
        "__nv_double2uint_rz",
        "__nv_double2ull_rd",
        "__nv_double2ull_rn",
        "__nv_double2ull_ru",
        "__nv_double2ull_rz",
        "__nv_double_as_longlong",
        "__nv_drcp_rd",
        "__nv_drcp_rn",
        "__nv_drcp_ru",
        "__nv_drcp_rz",
        "__nv_dsqrt_rd",
        "__nv_dsqrt_rn",
        "__nv_dsqrt_ru",
        "__nv_dsqrt_rz",
        "__nv_erf",
        "__nv_erfc",
        "__nv_erfcf",
        "__nv_erfcinv",
        "__nv_erfcinvf",
        "__nv_erfcx",
        "__nv_erfcxf",
        "__nv_erff",
        "__nv_erfinv",
        "__nv_erfinvf",
        "__nv_exp",
        "__nv_exp10",
        "__nv_exp10f",
        "__nv_exp2",
        "__nv_exp2f",
        "__nv_expf",
        "__nv_expm1",
        "__nv_expm1f",
        "__nv_fabs",
        "__nv_fabsf",
        "__nv_fadd_rd",
        "__nv_fadd_rn",
        "__nv_fadd_ru",
        "__nv_fadd_rz",
        "__nv_fast_cosf",
        "__nv_fast_exp10f",
        "__nv_fast_expf",
        "__nv_fast_fdividef",
        "__nv_fast_log10f",
        "__nv_fast_log2f",
        "__nv_fast_logf",
        "__nv_fast_powf",
        "__nv_fast_sincosf",
        "__nv_fast_sinf",
        "__nv_fast_tanf",
        "__nv_fdim",
        "__nv_fdimf",
        "__nv_fdiv_rd",
        "__nv_fdiv_rn",
        "__nv_fdiv_ru",
        "__nv_fdiv_rz",
        "__nv_ffs",
        "__nv_ffsll",
        "__nv_finitef",
        "__nv_float2half_rn",
        "__nv_float2int_rd",
        "__nv_float2int_rn",
        "__nv_float2int_ru",
        "__nv_float2int_rz",
        "__nv_float2ll_rd",
        "__nv_float2ll_rn",
        "__nv_float2ll_ru",
        "__nv_float2ll_rz",
        "__nv_float2uint_rd",
        "__nv_float2uint_rn",
        "__nv_float2uint_ru",
        "__nv_float2uint_rz",
        "__nv_float2ull_rd",
        "__nv_float2ull_rn",
        "__nv_float2ull_ru",
        "__nv_float2ull_rz",
        "__nv_float_as_int",
        "__nv_floor",
        "__nv_floorf",
        "__nv_fma",
        "__nv_fma_rd",
        "__nv_fma_rn",
        "__nv_fma_ru",
        "__nv_fma_rz",
        "__nv_fmaf",
        "__nv_fmaf_rd",
        "__nv_fmaf_rn",
        "__nv_fmaf_ru",
        "__nv_fmaf_rz",
        "__nv_fmax",
        "__nv_fmaxf",
        "__nv_fmin",
        "__nv_fminf",
        "__nv_fmod",
        "__nv_fmodf",
        "__nv_fmul_rd",
        "__nv_fmul_rn",
        "__nv_fmul_ru",
        "__nv_fmul_rz",
        "__nv_frcp_rd",
        "__nv_frcp_rn",
        "__nv_frcp_ru",
        "__nv_frcp_rz",
        "__nv_frexp",
        "__nv_frexpf",
        "__nv_frsqrt_rn",
        "__nv_fsqrt_rd",
        "__nv_fsqrt_rn",
        "__nv_fsqrt_ru",
        "__nv_fsqrt_rz",
        "__nv_fsub_rd",
        "__nv_fsub_rn",
        "__nv_fsub_ru",
        "__nv_fsub_rz",
        "__nv_hadd",
        "__nv_half2float",
        "__nv_hiloint2double",
        "__nv_hypot",
        "__nv_hypotf",
        "__nv_ilogb",
        "__nv_ilogbf",
        "__nv_int2double_rn",
        "__nv_int2float_rd",
        "__nv_int2float_rn",
        "__nv_int2float_ru",
        "__nv_int2float_rz",
        "__nv_int_as_float",
        "__nv_isfinited",
        "__nv_isinfd",
        "__nv_isinff",
        "__nv_isnand",
        "__nv_isnanf",
        "__nv_j0",
        "__nv_j0f",
        "__nv_j1",
        "__nv_j1f",
        "__nv_jn",
        "__nv_jnf",
        "__nv_ldexp",
        "__nv_ldexpf",
        "__nv_lgamma",
        "__nv_lgammaf",
        "__nv_ll2double_rd",
        "__nv_ll2double_rn",
        "__nv_ll2double_ru",
        "__nv_ll2double_rz",
        "__nv_ll2float_rd",
        "__nv_ll2float_rn",
        "__nv_ll2float_ru",
        "__nv_ll2float_rz",
        "__nv_llabs",
        "__nv_llmax",
        "__nv_llmin",
        "__nv_llrint",
        "__nv_llrintf",
        "__nv_llround",
        "__nv_llroundf",
        "__nv_log",
        "__nv_log10",
        "__nv_log10f",
        "__nv_log1p",
        "__nv_log1pf",
        "__nv_log2",
        "__nv_log2f",
        "__nv_logb",
        "__nv_logbf",
        "__nv_logf",
        "__nv_longlong_as_double",
        "__nv_max",
        "__nv_min",
        "__nv_modf",
        "__nv_modff",
        "__nv_mul24",
        "__nv_mul64hi",
        "__nv_mulhi",
        "__nv_nan",
        "__nv_nanf",
        "__nv_nearbyint",
        "__nv_nearbyintf",
        "__nv_nextafter",
        "__nv_nextafterf",
        "__nv_normcdf",
        "__nv_normcdff",
        "__nv_normcdfinv",
        "__nv_normcdfinvf",
        "__nv_popc",
        "__nv_popcll",
        "__nv_pow",
        "__nv_powf",
        "__nv_powi",
        "__nv_powif",
        "__nv_rcbrt",
        "__nv_rcbrtf",
        "__nv_remainder",
        "__nv_remainderf",
        "__nv_remquo",
        "__nv_remquof",
        "__nv_rhadd",
        "__nv_rint",
        "__nv_rintf",
        "__nv_round",
        "__nv_roundf",
        "__nv_rsqrt",
        "__nv_rsqrtf",
        "__nv_sad",
        "__nv_saturatef",
        "__nv_scalbn",
        "__nv_scalbnf",
        "__nv_signbitd",
        "__nv_signbitf",
        "__nv_sin",
        "__nv_sincos",
        "__nv_sincosf",
        "__nv_sincospi",
        "__nv_sincospif",
        "__nv_sinf",
        "__nv_sinh",
        "__nv_sinhf",
        "__nv_sinpi",
        "__nv_sinpif",
        "__nv_sqrt",
        "__nv_sqrtf",
        "__nv_tan",
        "__nv_tanf",
        "__nv_tanh",
        "__nv_tanhf",
        "__nv_tgamma",
        "__nv_tgammaf",
        "__nv_trunc",
        "__nv_truncf",
        "__nv_uhadd",
        "__nv_uint2double_rn",
        "__nv_uint2float_rd",
        "__nv_uint2float_rn",
        "__nv_uint2float_ru",
        "__nv_uint2float_rz",
        "__nv_ull2double_rd",
        "__nv_ull2double_rn",
        "__nv_ull2double_ru",
        "__nv_ull2double_rz",
        "__nv_ull2float_rd",
        "__nv_ull2float_rn",
        "__nv_ull2float_ru",
        "__nv_ull2float_rz",
        "__nv_ullmax",
        "__nv_ullmin",
        "__nv_umax",
        "__nv_umin",
        "__nv_umul24",
        "__nv_umul64hi",
        "__nv_umulhi",
        "__nv_urhadd",
        "__nv_usad",
        "__nv_y0",
        "__nv_y0f",
        "__nv_y1",
        "__nv_y1f",
        "__nv_yn",
        "__nv_ynf",
    };
    return libdeviceFunctions;
}


} // namespace sir