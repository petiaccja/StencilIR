name: Build & test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        c_compiler: [clang, cl]
        build_type: [Debug, Release]
        cxx_standard: ["20"]
        include:
          - c_compiler: clang
            cxx_compiler: clang++
          - c_compiler: cl
            cxx_compiler: cl
        exclude:
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    name: ${{ matrix.c_compiler }} - ${{ matrix.build_type }} - ${{ matrix.os }} - c++${{ matrix.cxx_standard }}
        
    runs-on: ${{matrix.os}}
    
    steps:
    - uses: actions/checkout@v3
    - uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Install conan
      shell: bash
      run: |
        pipx install conan

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Cache LLVM library
      id: cache-llvm-library
      uses: actions/cache@v3
      with:
        path: ${{runner.workspace}}/build/externals/LLVM/install
        key: llvm-cache-${{ matrix.c_compiler }}-${{ matrix.build_type }}-${{ matrix.os }}-c++${{ matrix.cxx_standard }}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        CC: ${{matrix.c_compiler}}
        CXX: ${{matrix.cxx_compiler}}
      run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} -DEXTERNAL_LLVM_BUILD_TYPE:STRING=Release

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Build Python package
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        MLIR_DIR: ${{runner.workspace}}/build/externals/LLVM/install/lib/cmake/mlir
        LLVM_DIR: ${{runner.workspace}}/build/externals/LLVM/install/lib/cmake/llvm
        CC: ${{matrix.c_compiler}}
        CXX: ${{matrix.cxx_compiler}}
        CMAKE_BUILD_TYPE: ${{matrix.build_type}}
        CMAKE_CXX_STANDARD: ${{ matrix.cxx_standard }}
      run: |
        pip install $GITHUB_WORKSPACE
        pip install -r $GITHUB_WORKSPACE/python/requirements-dev.txt      

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        ./bin/TestAST
        ./bin/TestPasses
        ./bin/TestIntegration
        pytest $GITHUB_WORKSPACE/python/test
