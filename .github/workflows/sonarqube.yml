name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install dependencies
        shell: bash
        run: |
          pip install conan
          sudo apt install llvm

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
        
      - name: Cache LLVM library
        id: cache-llvm-library
        uses: actions/cache@v3
        with:
          path: ${{runner.workspace}}/build/externals/LLVM/install
          key: llvm-cache-sonarqube
          restore-keys: llvm-cache-clang-Debug-ubuntu-latest-c++20

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CC: clang
          CXX: clang++
        run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DENABLE_LLVM_COV=ON -DCMAKE_CXX_STANDARD=20 -DEXTERNAL_LLVM_BUILD_TYPE:STRING=Release

      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build ${{runner.workspace}}/build --clean-first --config Debug

      - name: Generate Test and Code Coverage
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          ./bin/TestAST --reporter junit --out ${{runner.workspace}}/build/ast_tests.xml
          llvm-profdata merge -sparse default.profraw -o coverage.profdata
          llvm-cov show ./bin/TestAST -instr-profile=coverage.profdata >> ${{runner.workspace}}/build/coverage.txt

          ./bin/TestPasses --reporter junit --out ${{runner.workspace}}/build/passes_tests.xml
          llvm-profdata merge -sparse default.profraw -o coverage.profdata
          llvm-cov show ./bin/TestPasses -instr-profile=coverage.profdata >> ${{runner.workspace}}/build/coverage.txt

          ./bin/TestIntegration --reporter junit --out ${{runner.workspace}}/build/integration_tests.xml
          llvm-profdata merge -sparse default.profraw -o coverage.profdata
          llvm-cov show ./bin/TestIntegration -instr-profile=coverage.profdata >> ${{runner.workspace}}/build/coverage.txt
  
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"